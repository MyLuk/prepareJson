[{"nameRu":"","descriptionEnTRANS":"Обязательный Выражение, используемое для вычисления ключа корреляции для использования при агрегировании. Биржа с одинаковым ключом корреляции агрегируется вместе. Если ключ корреляции не может быть оценен, создается исключение. Вы можете отключить это, используя опцию ignoreBadCorrelationKeys.","descriptionEn":"Required The expression used to calculate the correlation key to use for aggregation. The Exchange which has the same correlation key is aggregated together. If the correlation key could not be evaluated an Exception is thrown. You can disable this by using the ignoreBadCorrelationKeys option.","defaultValue":null,"description":"Обязательный Выражение, используемое для вычисления ключа корреляции для использования при агрегировании. Биржа с одинаковым ключом корреляции агрегируется вместе. Если ключ корреляции не может быть оценен, создается исключение. Вы можете отключить это, используя опцию ignoreBadCorrelationKeys.","nameEn":"correlationExpression","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Предикат, чтобы указать, когда агрегированный обмен завершен. Если это не указано, а объект AggregationStrategy реализует Predicate, объект aggregationStrategy будет использоваться как завершение-предикат.","descriptionEn":"A Predicate to indicate when an aggregated exchange is complete. If this is not specified and the AggregationStrategy object implements Predicate, the aggregationStrategy object will be used as the completionPredicate.","defaultValue":null,"description":"Предикат, чтобы указать, когда агрегированный обмен завершен. Если это не указано, а объект AggregationStrategy реализует Predicate, объект aggregationStrategy будет использоваться как завершение-предикат.","nameEn":"completionPredicate","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Время в миллисах, что агрегированный обмен должен быть неактивным до его завершения (тайм-аут). Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать время ожидания - в качестве результата будет использоваться Long. Если оба параметра установлены, Camel будет использовать фиксированное значение, если результат выражения равен нулю или 0. Вы не можете использовать эту опцию вместе с завершением интервала, можно использовать только один из двух. По умолчанию проверка тайм-аута выполняется каждую секунду, вы можете использовать параметр completeTimeoutCheckerInterval, чтобы настроить частоту запуска этой проверки. Тайм-аут является приблизительным, и нет никакой гарантии, что тайм-аут срабатывает точно после значения тайм-аута. Не рекомендуется использовать очень низкие значения времени ожидания или интервалы проверки.","descriptionEn":"Time in millis that an aggregated exchange should be inactive before its complete (timeout). This option can be set as either a fixed value or using an Expression which allows you to evaluate a timeout dynamically - will use Long as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0. You cannot use this option together with completionInterval, only one of the two can be used. By default the timeout checker runs every second, you can use the completionTimeoutCheckerInterval option to configure how frequently to run the checker. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.","defaultValue":null,"description":"Время в миллисах, что агрегированный обмен должен быть неактивным до его завершения (тайм-аут). Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать время ожидания - в качестве результата будет использоваться Long. Если оба параметра установлены, Camel будет использовать фиксированное значение, если результат выражения равен нулю или 0. Вы не можете использовать эту опцию вместе с завершением интервала, можно использовать только один из двух. По умолчанию проверка тайм-аута выполняется каждую секунду, вы можете использовать параметр completeTimeoutCheckerInterval, чтобы настроить частоту запуска этой проверки. Тайм-аут является приблизительным, и нет никакой гарантии, что тайм-аут срабатывает точно после значения тайм-аута. Не рекомендуется использовать очень низкие значения времени ожидания или интервалы проверки.","nameEn":"completionTimeoutExpression","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Количество сообщений, агрегированных до завершения агрегации. Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать размер - будет использовать Integer в качестве результата. Если оба параметра заданы, Camel откажется использовать фиксированное значение, если результат выражения был равен нулю или 0.","descriptionEn":"Number of messages aggregated before the aggregation is complete. This option can be set as either a fixed value or using an Expression which allows you to evaluate a size dynamically - will use Integer as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0.","defaultValue":null,"description":"Количество сообщений, агрегированных до завершения агрегации. Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать размер - будет использовать Integer в качестве результата. Если оба параметра заданы, Camel откажется использовать фиксированное значение, если результат выражения был равен нулю или 0.","nameEn":"completionSizeExpression","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Позволяет настроить параметры повтора при использовании оптимистической блокировки.","descriptionEn":"Allows to configure retry settings when using optimistic locking.","defaultValue":null,"description":"Позволяет настроить параметры повтора при использовании оптимистической блокировки.","nameEn":"optimisticLockRetryPolicy","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Когда агрегирование завершено, они отправляются из агрегатора. Эта опция указывает, должен ли Camel использовать пул потоков с несколькими потоками для параллелизма. Если пользовательский пул потоков не указан, то Camel создает пул по умолчанию с 10 одновременными потоками.","descriptionEn":"When aggregated are completed they are being send out of the aggregator. This option indicates whether or not Camel should use a thread pool with multiple threads for concurrency. If no custom thread pool has been specified then Camel creates a default pool with 10 concurrent threads.","defaultValue":"false","description":"Когда агрегирование завершено, они отправляются из агрегатора. Эта опция указывает, должен ли Camel использовать пул потоков с несколькими потоками для параллелизма. Если пользовательский пул потоков не указан, то Camel создает пул по умолчанию с 10 одновременными потоками.","nameEn":"parallelProcessing","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Включает использование оптимистической блокировки, для которой требуется используемый aggregationRepository, поддерживает это путем реализации org.apache.camel.spi.OptimisticLockingAggregationRepository.","descriptionEn":"Turns on using optimistic locking, which requires the aggregationRepository being used, is supporting this by implementing org.apache.camel.spi.OptimisticLockingAggregationRepository.","defaultValue":"false","description":"Включает использование оптимистической блокировки, для которой требуется используемый aggregationRepository, поддерживает это путем реализации org.apache.camel.spi.OptimisticLockingAggregationRepository.","nameEn":"optimisticLocking","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"При использовании параллельной обработки вы можете указать собственный пул потоков, который будет использоваться. Фактически также, если вы не используете параллельную обработку, этот пользовательский пул потоков также используется для отправки агрегированных обменов.","descriptionEn":"If using parallelProcessing you can specify a custom thread pool to be used. In fact also if you are not using parallelProcessing this custom thread pool is used to send out aggregated exchanges as well.","defaultValue":null,"description":"При использовании параллельной обработки вы можете указать собственный пул потоков, который будет использоваться. Фактически также, если вы не используете параллельную обработку, этот пользовательский пул потоков также используется для отправки агрегированных обменов.","nameEn":"executorServiceRef","type":"STRING"},{"nameRu":"","descriptionEnTRANS":"При использовании одного из параметров завершение времени, завершение времени или завершение завершения создается фоновый поток для проверки завершения для каждого агрегатора. Установите этот параметр, чтобы предоставить настраиваемый пул потоков для использования, а не создавать новый поток для каждого агрегатора.","descriptionEn":"If using either of the completionTimeout, completionTimeoutExpression, or completionInterval options a background thread is created to check for the completion for every aggregator. Set this option to provide a custom thread pool to be used rather than creating a new thread for every aggregator.","defaultValue":null,"description":"При использовании одного из параметров завершение времени, завершение времени или завершение завершения создается фоновый поток для проверки завершения для каждого агрегатора. Установите этот параметр, чтобы предоставить настраиваемый пул потоков для использования, а не создавать новый поток для каждого агрегатора.","nameEn":"timeoutCheckerExecutor","type":"STRING"},{"nameRu":"","descriptionEnTRANS":"Устанавливает хранилище настраиваемых агрегатов для использования по умолчанию. Will использует org.apache.camel.processor.aggregate.MemoryAggregationRepository.","descriptionEn":"Sets the custom aggregate repository to use Will by default use org.apache.camel.processor.aggregate.MemoryAggregationRepository","defaultValue":null,"description":"Устанавливает хранилище настраиваемых агрегатов для использования по умолчанию. Will использует org.apache.camel.processor.aggregate.MemoryAggregationRepository.","nameEn":"aggregationRepositoryRef","type":"STRING"},{"nameRu":"","descriptionEnTRANS":"Ссылка для поиска AggregationStrategy в реестре. Требуется настройка AggregationStrategy, которая используется для объединения входящего Exchange с существующими уже объединенными биржами. При первом вызове параметр oldExchange имеет значение null. При последующих вызовах oldExchange содержит объединенные биржи, а newExchange, конечно, является новой входящей биржей.","descriptionEn":"A reference to lookup the AggregationStrategy in the Registry. Configuring an AggregationStrategy is required, and is used to merge the incoming Exchange with the existing already merged exchanges. At first call the oldExchange parameter is null. On subsequent invocations the oldExchange contains the merged exchanges and newExchange is of course the new incoming Exchange.","defaultValue":null,"description":"Ссылка для поиска AggregationStrategy в реестре. Требуется настройка AggregationStrategy, которая используется для объединения входящего Exchange с существующими уже объединенными биржами. При первом вызове параметр oldExchange имеет значение null. При последующих вызовах oldExchange содержит объединенные биржи, а newExchange, конечно, является новой входящей биржей.","nameEn":"strategyRef","type":"STRING"},{"nameRu":"","descriptionEnTRANS":"Эту опцию можно использовать для явного объявления имени метода при использовании POJO в качестве AggregationStrategy.","descriptionEn":"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.","defaultValue":null,"description":"Эту опцию можно использовать для явного объявления имени метода при использовании POJO в качестве AggregationStrategy.","nameEn":"strategyMethodName","type":"STRING"},{"nameRu":"","descriptionEnTRANS":"Если этот параметр имеет значение false, метод агрегирования не используется для самой первой агрегации. Если этот параметр имеет значение true, то в качестве oldExchange (при самой первой агрегации) используются нулевые значения при использовании POJO в качестве AggregationStrategy.","descriptionEn":"If this option is false then the aggregate method is not used for the very first aggregation. If this option is true then null values is used as the oldExchange (at the very first aggregation), when using POJOs as the AggregationStrategy.","defaultValue":"false","description":"Если этот параметр имеет значение false, метод агрегирования не используется для самой первой агрегации. Если этот параметр имеет значение true, то в качестве oldExchange (при самой первой агрегации) используются нулевые значения при использовании POJO в качестве AggregationStrategy.","nameEn":"strategyMethodAllowNull","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Количество сообщений, агрегированных до завершения агрегации. Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать размер - будет использовать Integer в качестве результата. Если оба параметра заданы, Camel откажется использовать фиксированное значение, если результат выражения был равен нулю или 0.","descriptionEn":"Number of messages aggregated before the aggregation is complete. This option can be set as either a fixed value or using an Expression which allows you to evaluate a size dynamically - will use Integer as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0.","defaultValue":null,"description":"Количество сообщений, агрегированных до завершения агрегации. Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать размер - будет использовать Integer в качестве результата. Если оба параметра заданы, Camel откажется использовать фиксированное значение, если результат выражения был равен нулю или 0.","nameEn":"completionSize","type":"INT"},{"nameRu":"","descriptionEnTRANS":"Период повторения в миллисах, к которому агрегатор завершит все текущие агрегированные обмены. У верблюда есть фоновое задание, которое запускается каждый период. Вы не можете использовать эту опцию вместе с завершением времени, может использоваться только один из них.","descriptionEn":"A repeating period in millis by which the aggregator will complete all current aggregated exchanges. Camel has a background task which is triggered every period. You cannot use this option together with completionTimeout, only one of them can be used.","defaultValue":null,"description":"Период повторения в миллисах, к которому агрегатор завершит все текущие агрегированные обмены. У верблюда есть фоновое задание, которое запускается каждый период. Вы не можете использовать эту опцию вместе с завершением времени, может использоваться только один из них.","nameEn":"completionInterval","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Время в миллисах, что агрегированный обмен должен быть неактивным до его завершения (тайм-аут). Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать время ожидания - в качестве результата будет использоваться Long. Если оба параметра установлены, Camel будет использовать фиксированное значение, если результат выражения равен нулю или 0. Вы не можете использовать эту опцию вместе с завершением интервала, можно использовать только один из двух. По умолчанию проверка тайм-аута выполняется каждую секунду, вы можете использовать параметр completeTimeoutCheckerInterval, чтобы настроить частоту запуска этой проверки. Тайм-аут является приблизительным, и нет никакой гарантии, что тайм-аут срабатывает точно после значения тайм-аута. Не рекомендуется использовать очень низкие значения времени ожидания или интервалы проверки.","descriptionEn":"Time in millis that an aggregated exchange should be inactive before its complete (timeout). This option can be set as either a fixed value or using an Expression which allows you to evaluate a timeout dynamically - will use Long as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0. You cannot use this option together with completionInterval, only one of the two can be used. By default the timeout checker runs every second, you can use the completionTimeoutCheckerInterval option to configure how frequently to run the checker. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.","defaultValue":null,"description":"Время в миллисах, что агрегированный обмен должен быть неактивным до его завершения (тайм-аут). Эта опция может быть установлена либо как фиксированное значение, либо с помощью выражения, которое позволяет динамически оценивать время ожидания - в качестве результата будет использоваться Long. Если оба параметра установлены, Camel будет использовать фиксированное значение, если результат выражения равен нулю или 0. Вы не можете использовать эту опцию вместе с завершением интервала, можно использовать только один из двух. По умолчанию проверка тайм-аута выполняется каждую секунду, вы можете использовать параметр completeTimeoutCheckerInterval, чтобы настроить частоту запуска этой проверки. Тайм-аут является приблизительным, и нет никакой гарантии, что тайм-аут срабатывает точно после значения тайм-аута. Не рекомендуется использовать очень низкие значения времени ожидания или интервалы проверки.","nameEn":"completionTimeout","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Интервал в миллисекундах, используемый фоновой задачей, которая проверяет время ожидания (org.apache.camel.TimeoutMap). По умолчанию проверка таймаута выполняется каждую секунду. Тайм-аут является приблизительным, и нет никакой гарантии, что тайм-аут срабатывает точно после значения тайм-аута. Не рекомендуется использовать очень низкие значения времени ожидания или интервалы проверки.","descriptionEn":"Interval in millis that is used by the background task that checks for timeouts (org.apache.camel.TimeoutMap). By default the timeout checker runs every second. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.","defaultValue":"1000","description":"Интервал в миллисекундах, используемый фоновой задачей, которая проверяет время ожидания (org.apache.camel.TimeoutMap). По умолчанию проверка таймаута выполняется каждую секунду. Тайм-аут является приблизительным, и нет никакой гарантии, что тайм-аут срабатывает точно после значения тайм-аута. Не рекомендуется использовать очень низкие значения времени ожидания или интервалы проверки.","nameEn":"completionTimeoutChecker","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Включает режим пакетного завершения, в котором мы агрегируем из org.apache.camel.BatchConsumer и агрегируем общее количество обменов, о которых org.apache.camel.BatchConsumer сообщил как общее, проверив свойство обмена org.apache.camel.Exchange # BATCH_COMPLETE когда его завершат. Эта опция не может использоваться вместе с discardOnAggregationFailure.","descriptionEn":"Enables the batch completion mode where we aggregate from a org.apache.camel.BatchConsumer and aggregate the total number of exchanges the org.apache.camel.BatchConsumer has reported as total by checking the exchange property org.apache.camel.Exchange#BATCH_COMPLETE when its complete. This option cannot be used together with discardOnAggregationFailure.","defaultValue":"false","description":"Включает режим пакетного завершения, в котором мы агрегируем из org.apache.camel.BatchConsumer и агрегируем общее количество обменов, о которых org.apache.camel.BatchConsumer сообщил как общее, проверив свойство обмена org.apache.camel.Exchange # BATCH_COMPLETE когда его завершат. Эта опция не может использоваться вместе с discardOnAggregationFailure.","nameEn":"completionFromBatchConsumer","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Включает завершение для всех предыдущих групп при создании новой входящей корреляционной группы. Это может, например, использоваться для заполнения групп одинаковыми ключами корреляции, когда они расположены в последовательном порядке. Обратите внимание, что когда это включено, тогда может выполняться только 1 группа корреляций, поскольку, когда начинается новая группа корреляции, тогда предыдущие группы принудительно завершаются.","descriptionEn":"Enables completion on all previous groups when a new incoming correlation group. This can for example be used to complete groups with same correlation keys when they are in consecutive order. Notice when this is enabled then only 1 correlation group can be in progress as when a new correlation group starts, then the previous groups is forced completed.","defaultValue":"false","description":"Включает завершение для всех предыдущих групп при создании новой входящей корреляционной группы. Это может, например, использоваться для заполнения групп одинаковыми ключами корреляции, когда они расположены в последовательном порядке. Обратите внимание, что когда это включено, тогда может выполняться только 1 группа корреляций, поскольку, когда начинается новая группа корреляции, тогда предыдущие группы принудительно завершаются.","nameEn":"completionOnNewCorrelation","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Используйте готовую проверку завершения, что означает, что завершениеПредикат будет использовать входящий Exchange. В отличие от безуспешной проверки завершения, CompletePredicate будет использовать агрегированный Exchange.","descriptionEn":"Use eager completion checking which means that the completionPredicate will use the incoming Exchange. As opposed to without eager completion checking the completionPredicate will use the aggregated Exchange.","defaultValue":"false","description":"Используйте готовую проверку завершения, что означает, что завершениеПредикат будет использовать входящий Exchange. В отличие от безуспешной проверки завершения, CompletePredicate будет использовать агрегированный Exchange.","nameEn":"eagerCheckCompletion","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Если ключ корреляции не может быть успешно оценен, он будет проигнорирован путем регистрации DEBUG, а затем просто проигнорирует входящий Exchange.","descriptionEn":"If a correlation key cannot be successfully evaluated it will be ignored by logging a DEBUG and then just ignore the incoming Exchange.","defaultValue":"false","description":"Если ключ корреляции не может быть успешно оценен, он будет проигнорирован путем регистрации DEBUG, а затем просто проигнорирует входящий Exchange.","nameEn":"ignoreInvalidCorrelation","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Закрывает ключ корреляции после его завершения. Любые поздно полученные обмены, у которых есть ключ корреляции, который был закрыт, он будет определен и выброшено исключение ClosedCorrelationKeyException.","descriptionEn":"Closes a correlation key when its complete. Any late received exchanges which has a correlation key that has been closed, it will be defined and a ClosedCorrelationKeyException is thrown.","defaultValue":null,"description":"Закрывает ключ корреляции после его завершения. Любые поздно полученные обмены, у которых есть ключ корреляции, который был закрыт, он будет определен и выброшено исключение ClosedCorrelationKeyException.","nameEn":"closeCorrelationKeyOn","type":"INT"},{"nameRu":"","descriptionEnTRANS":"Отбрасывает агрегированное сообщение по истечении времени ожидания. Это означает, что по истечении времени ожидания агрегированное сообщение удаляется и не отправляется из агрегатора.","descriptionEn":"Discards the aggregated message on completion timeout. This means on timeout the aggregated message is dropped and not sent out of the aggregator.","defaultValue":"false","description":"Отбрасывает агрегированное сообщение по истечении времени ожидания. Это означает, что по истечении времени ожидания агрегированное сообщение удаляется и не отправляется из агрегатора.","nameEn":"discardOnCompletionTimeout","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Отбрасывает агрегированное сообщение при сбое агрегации (исключение было выдано из AggregationStrategy. Это означает, что частично агрегированное сообщение отбрасывается и не отправляется из агрегатора. Этот параметр нельзя использовать вместе с completeFromBatchConsumer.","descriptionEn":"Discards the aggregated message when aggregation failed (an exception was thrown from AggregationStrategy. This means the partly aggregated message is dropped and not sent out of the aggregator. This option cannot be used together with completionFromBatchConsumer.","defaultValue":"false","description":"Отбрасывает агрегированное сообщение при сбое агрегации (исключение было выдано из AggregationStrategy. Это означает, что частично агрегированное сообщение отбрасывается и не отправляется из агрегатора. Этот параметр нельзя использовать вместе с completeFromBatchConsumer.","nameEn":"discardOnAggregationFailure","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Указывает на завершение всех текущих агрегированных обменов, когда контекст остановлен","descriptionEn":"Indicates to complete all current aggregated exchanges when the context is stopped","defaultValue":"false","description":"Указывает на завершение всех текущих агрегированных обменов, когда контекст остановлен","nameEn":"forceCompletionOnStop","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Указывает на ожидание завершения всех текущих и частичных (ожидающих) агрегированных обменов, когда контекст остановлен. Это также означает, что мы будем ждать завершения всех ожидающих обменов, которые хранятся в хранилище агрегации, поэтому хранилище пусто, прежде чем мы сможем остановиться. Возможно, вы захотите включить это при использовании хранилища данных на основе памяти, которое основано только на памяти, и не храните данные на диске. Когда эта опция включена, агрегатор ожидает завершения всех этих обменов до его остановки, при остановке CamelContext или маршрута с его использованием.","descriptionEn":"Indicates to wait to complete all current and partial (pending) aggregated exchanges when the context is stopped. This also means that we will wait for all pending exchanges which are stored in the aggregation repository to complete so the repository is empty before we can stop. You may want to enable this when using the memory based aggregation repository that is memory based only, and do not store data on disk. When this option is enabled, then the aggregator is waiting to complete all those exchanges before its stopped, when stopping CamelContext or the route using it.","defaultValue":"false","description":"Указывает на ожидание завершения всех текущих и частичных (ожидающих) агрегированных обменов, когда контекст остановлен. Это также означает, что мы будем ждать завершения всех ожидающих обменов, которые хранятся в хранилище агрегации, поэтому хранилище пусто, прежде чем мы сможем остановиться. Возможно, вы захотите включить это при использовании хранилища данных на основе памяти, которое основано только на памяти, и не храните данные на диске. Когда эта опция включена, агрегатор ожидает завершения всех этих обменов до его остановки, при остановке CamelContext или маршрута с его использованием.","nameEn":"completeAllOnStop","type":"BEAN"},{"nameRu":"","descriptionEnTRANS":"Чтобы использовать org.apache.camel.processor.aggregate.AggregateController, чтобы внешние источники могли управлять этим агрегатором.","descriptionEn":"To use a org.apache.camel.processor.aggregate.AggregateController to allow external sources to control this aggregator.","defaultValue":null,"description":"Чтобы использовать org.apache.camel.processor.aggregate.AggregateController, чтобы внешние источники могли управлять этим агрегатором.","nameEn":"aggregateControllerRef","type":"STRING"}]