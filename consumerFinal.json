[
  {
    "nameRu": "Режим передачи файлов",
    "defaultValue": false,
    "description": "Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false).",
    "nameEn": "binary",
    "type": "BOOL"
  },
  {
    "nameRu": "Кодировка файла",
    "defaultValue": null,
    "description": "Указывает кодировку обрабатываемых файлов",
    "nameEn": "charset",
    "type": "STRING"
  },
  {
    "nameRu": "Отключиться",
    "defaultValue": false,
    "description": "Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так и для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить маршрут",
    "nameEn": "disconnect",
    "type": "BOOL"
  },
  {
    "nameRu": "Имя готового файла",
    "defaultValue": null,
    "description": "Брокер будет потреблять файлы, если готовый файл существует. После обработки готовый файл удаляется, если не активирован параметр noop. Может использоваться либо фиксированное имя, либо динамические заполнители. Например, если значение параметра done, то файлы будут обрабатываться, только если в текущей директории появится файл с именем done. Однако, более распространено иметь один готовый файл на целевой файл для этого вы должны использовать динамические заполнители в этом параметре. Поддерживаются следующие два динамических токена: file:name и file:name.noext, которые должны быть заключены в ${}. Точка входа поддерживает только статическую часть имени готового файла как префикс или суффикс (но не оба). Например, при значении ${file:name}.done файл hello.txt будет обработан, только если присутствует файл hello.txt.done",
    "nameEn": "doneFileName",
    "type": "STRING"
  },
  {
    "nameRu": "Имя файла",
    "defaultValue": null,
    "description": "Фильтровать файлы по динамическому значению с использованием файлового языка, например, вы можете потреблять файлы созданные сегодня, используя следующий синтаксис: mydata-${date:now:yyyyMMdd}.txt",
    "nameEn": "fileName",
    "type": "STRING"
  },
  {
    "nameRu": "Пассивный режим соединения",
    "defaultValue": false,
    "description": "Указывает, следует ли использовать пассивный режим соединения. По умолчанию active mode (false).",
    "nameEn": "passiveMode",
    "type": "BOOL"
  },
  {
    "acceptableValues": [
      {
        "label": "AUTO",
        "value": "AUTO"
      },
      {
        "label": "UNIX",
        "value": "UNIX"
      },
      {
        "label": "Windows",
        "value": "Windows"
      }
    ],
    "nameRu": "Разделитель пути",
    "defaultValue": "UNIX",
    "description": "Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows.",
    "nameEn": "separator",
    "type": "SELECT"
  },
  {
    "nameRu": "Интервал при регистрации хода операций загрузки и выгрузки",
    "defaultValue": "5",
    "description": "Настраивает интервал в секундах для использования при регистрации хода операций загрузки и выгрузки, выполняемых в полете. Это используется для регистрации прогресса, когда операции занимают больше времени.",
    "nameEn": "transferLoggingIntervalSeconds",
    "type": "INT"
  },
  {
    "nameRu": "Уровень ведения журнала операций загрузки и выгрузки",
    "defaultValue": "DEBUG",
    "description": "Настройте уровень ведения журнала, который будет использоваться при ведении журнала операций загрузки и выгрузки",
    "nameEn": "transferLoggingLevel",
    "type": "BEAN"
  },
  {
    "nameRu": "Подробное ведение журнала операций загрузки и выгрузки",
    "defaultValue": false,
    "description": "Настраивает, выполнять ли подробное (детальное) ведение журнала хода выполнения операций загрузки и выгрузки",
    "nameEn": "transferLoggingVerbose",
    "type": "BOOL"
  },
  {
    "nameRu": "Проверка существования файла",
    "defaultValue": false,
    "description": "Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов.",
    "nameEn": "fastExistsCheck",
    "type": "BOOL"
  },
  {
    "nameRu": "Соединить потребителя с обработчиком ошибок",
    "defaultValue": false,
    "description": "Позволяет соединить потребителя с обработчиком ошибок маршрутизации, что означает, что любые исключения, возникшие при попытке потребителя принять входящие сообщения или тому подобное, теперь будут обрабатываться как сообщения и обрабатываться обработчиком ошибок маршрутизации. По умолчанию потребитель будет использовать org.apache.camel.spi.ExceptionHandler для обработки исключений, которые будут регистрироваться на уровне WARN или ERROR и игнорироваться.",
    "nameEn": "bridgeErrorHandler",
    "type": "BOOL"
  },
  {
    "nameRu": "Удалить файл",
    "defaultValue": false,
    "description": "Удалять файлы после успешной обработки",
    "nameEn": "delete",
    "type": "BOOL"
  },
  {
    "nameRu": "Имя директории\/файла при ошибке",
    "defaultValue": null,
    "description": "Строка или выражение файлового или простого языка, используется для динамической установки имени файла при его перемещении при ошибке его обработкия. Например, при значении параметра temp файлы будут перемещены в директорию temp со своими именами, при значении temp\/${id} перемещены в temp и названы как их id, при temp\/${id}\/${file:name} каждый файл под своим именем будет перемещен в отдельную директорию под названием его id внутри директории temp",
    "nameEn": "moveFailed",
    "type": "STRING"
  },
  {
    "nameRu": "Только чтение",
    "defaultValue": false,
    "description": "Не перемещать и не удалять файлы. По умолчанию файлы перемещаются в директорию .camel",
    "nameEn": "noop",
    "type": "BOOL"
  },
  {
    "nameRu": "Имя директории\/файла в процессе обработки",
    "defaultValue": null,
    "description": "Строка или выражение файлового или простого языка, используется для динамической установки имени директории\/файла при его обработке. Например, при значении параметра temp файлы будут перемещены в директорию temp со своими именами, при значении temp\/${id} перемещены в temp и названы как их id, при temp\/${id}\/${file:name} каждый файл под своим именем будет перемещен в отдельную директорию под названием его id внутри директории temp",
    "nameEn": "preMove",
    "type": "STRING"
  },
  {
    "nameRu": "Предварительная сортировка",
    "defaultValue": false,
    "description": "Если включена предварительная сортировка, то потребитель будет сортировать имена файлов и каталогов во время опроса, которые были получены из файловой системы. Вы можете сделать это в случае, если вам нужно работать с файлами в отсортированном порядке. Предварительная сортировка выполняется до того, как потребитель начнет фильтровать и принимать файлы для обработки",
    "nameEn": "preSort",
    "type": "BOOL"
  },
  {
    "nameRu": "Рекурсивность",
    "defaultValue": false,
    "description": "Искать файлы во вложенных директориях",
    "nameEn": "recursive",
    "type": "BOOL"
  },
  {
    "nameRu": "Включить возобновляемую загрузку",
    "defaultValue": false,
    "description": "Настраивает, включена ли возобновляемая загрузка. Это должно поддерживаться FTP-сервером (это поддерживают почти все FTP-серверы). Кроме того, параметры localWorkDirectory должны быть настроены таким образом, чтобы загруженные файлы сохранялись в локальном каталоге, а двоичный параметр должен быть включен, что необходимо для поддержки возобновления загрузок.",
    "nameEn": "resumeDownload",
    "type": "BOOL"
  },
  {
    "nameRu": "Отправлять пустые сообщения в состоянии простоя",
    "defaultValue": false,
    "description": "Отправлять пустые сообщения в состоянии простоя",
    "nameEn": "sendEmptyMessageWhenIdle",
    "type": "BOOL"
  },
  {
    "nameRu": "Потоковая Загрузка",
    "defaultValue": false,
    "description": "Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя потоковую загрузку. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог»",
    "nameEn": "streamDownload",
    "type": "BOOL"
  },
  {
    "nameRu": "Загрузить файл",
    "defaultValue": true,
    "description": "Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д..",
    "nameEn": "download",
    "type": "BOOL"
  },
  {
    "nameRu": "Обработчик исключений",
    "defaultValue": null,
    "description": "Позволить потребителю использовать пользовательский ExceptionHandler. Обратите внимание, что если опция bridgeErrorHandler включена, то эта опция не используется. По умолчанию потребитель будет иметь дело с исключениями, которые будут регистрироваться на уровне WARN или ERROR и игнорироваться",
    "nameEn": "exceptionHandler",
    "type": "BEAN"
  },
  {
    "nameRu": "Модель обмена",
    "defaultValue": null,
    "description": "Устанавливает модель обмена, когда потребитель создает обмен",
    "nameEn": "exchangePattern",
    "type": "BEAN"
  },
  {
    "nameRu": "Как обрабатывать файлы в пути, если парсер каталогов приводит к абсолютным путям",
    "defaultValue": false,
    "description": "Позволяет вам установить, как потребитель будет обрабатывать подпапки и файлы в пути, если парсер каталогов приводит к абсолютным путям. Причина в том, что некоторые FTP-серверы могут возвращать имена файлов с абсолютными путями, и если это так, то компонент FTP должен справиться с этим путем преобразования возвращенного пути в относительный путь.",
    "nameEn": "handleDirectoryParserAbsoluteResult",
    "type": "BOOL"
  },
  {
    "nameRu": "Игнорировать не найденный файл или ошибки доступа",
    "defaultValue": false,
    "description": "Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами.",
    "nameEn": "ignoreFileNotFoundOrPermissionError",
    "type": "BOOL"
  },
  {
    "nameRu": "Подключаемое текущее хранилище",
    "defaultValue": null,
    "description": "Подключаемое текущее хранилище org.apache.camel.spi.IdempotentRepository. Текущий репозиторий используется для учета текущих текущих файлов, которые используются. По умолчанию используется хранилище на основе памяти",
    "nameEn": "inProgressRepository",
    "type": "BEAN"
  },
  {
    "nameRu": "Локальный рабочий каталог",
    "defaultValue": null,
    "description": "При потреблении, локальный рабочий каталог используется для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе",
    "nameEn": "localWorkDirectory",
    "type": "STRING"
  },
  {
    "nameRu": "Использовать пользовательский обработчик исключений",
    "defaultValue": null,
    "description": "Использовать пользовательский org.apache.camel.spi.ExceptionHandler для обработки любых сгенерированных исключений, возникающих во время процесса завершения файла, когда потребитель выполняет коммит или откат. Реализация по умолчанию будет регистрировать любое исключение на уровне WARN и игнорировать",
    "nameEn": "onCompletionExceptionHandler",
    "type": "BEAN"
  },
  {
    "nameRu": "Стратегия опроса",
    "defaultValue": null,
    "description": "Подключаемый модуль org.apache.camel.PollingConsumerPollingStrategy, позволяющий предоставить пользовательскую реализацию для управления обработкой ошибок, которая обычно возникала во время операции опроса до создания Exchange и его маршрутизации в брокер",
    "nameEn": "pollStrategy",
    "type": "BEAN"
  },
  {
    "nameRu": "Подключаемый модуль, позволяющий реализовать собственный параметр readLock",
    "defaultValue": null,
    "description": "Подключаемый модуль org.apache.camel.component.file.GenericFileProcessStrategy, позволяющий реализовать собственный параметр readLock или аналогичный. Может также использоваться, когда перед использованием файла должны выполняться особые условия, например, существует специальный готовый файл. Если этот параметр установлен, то параметр readLock не применяется",
    "nameEn": "processStrategy",
    "type": "BEAN"
  },
  {
    "nameRu": "Размер приемного буфера",
    "defaultValue": 32768,
    "description": "Размер буфера для загрузки файлов. Размер по умолчанию 32кб.",
    "nameEn": "receiveBufferSize",
    "type": "INT"
  },
  {
    "nameRu": "Использовать команду LIST",
    "defaultValue": true,
    "description": "Разрешить ли использование команды LIST при загрузке файла. По умолчанию это правда. В некоторых случаях вы можете захотеть загрузить определенный файл, и вам не разрешено использовать команду LIST, и поэтому вы можете установить для этой опции значение false. Обратите внимание, что при использовании этой опции конкретный файл для загрузки не включает информацию метаданных, такую как размер файла, временную метку, разрешения и т. Д., Поскольку эту информацию можно получить только при использовании команды LIST",
    "nameEn": "useList",
    "type": "BOOL"
  },
  {
    "nameRu": "Диапазон портов в активном режиме",
    "defaultValue": null,
    "description": "Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов.",
    "nameEn": "activePortRange",
    "type": "STRING"
  },
  {
    "nameRu": "Автоматическое создание директорий",
    "defaultValue": true,
    "description": "Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы .",
    "nameEn": "autoCreate",
    "type": "BOOL"
  },
  {
    "nameRu": "Должна ли конечная точка использовать базовую привязку свойства",
    "defaultValue": false,
    "description": "Должна ли конечная точка использовать базовую привязку свойства или более новую привязку свойства с дополнительными возможностями",
    "nameEn": "basicPropertyBinding",
    "type": "BOOL"
  },
  {
    "nameRu": "Размер буфера",
    "defaultValue": "128",
    "description": "Буфер записи с заданным размером в байтах.",
    "nameEn": "bufferSize",
    "type": "STRING"
  },
  {
    "nameRu": "Таймаут соединения",
    "defaultValue": 10000,
    "description": "Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP \/ FTPS. Для SFTP эта опция также используется при попытке подключения.",
    "nameEn": "connectTimeout",
    "type": "INT"
  },
  {
    "nameRu": "Пользовательский экземпляр FTPClient",
    "defaultValue": null,
    "description": "Чтобы использовать пользовательский экземпляр FTPClient",
    "nameEn": "ftpClient",
    "type": "BEAN"
  },
  {
    "nameRu": "Конфигурация Ftp клиента",
    "defaultValue": null,
    "description": "Позволяет использовать клиент org.apache.commons.net.ftp.FTPClientConfig.",
    "nameEn": "ftpClientConfig",
    "type": "BEAN"
  },
  {
    "nameRu": "Параметров FTPClientConfig",
    "defaultValue": null,
    "description": "Используется FtpComponent для предоставления дополнительных параметров для FTPClientConfig",
    "nameEn": "ftpClientConfigParameters",
    "type": "BEAN"
  },
  {
    "nameRu": "Параметры FTPClient",
    "defaultValue": null,
    "description": "Используется FtpComponent для предоставления дополнительных параметров для FTPClient",
    "nameEn": "ftpClientParameters",
    "type": "BEAN"
  },
  {
    "nameRu": "Максимальное кол-во попыток переподключений",
    "defaultValue": 3,
    "description": "Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение.",
    "nameEn": "maximumReconnectAttempts",
    "type": "INT"
  },
  {
    "nameRu": "Задержка переподключения",
    "defaultValue": 1000,
    "description": "Задержка в Миллисекундах перед выполнением попытки повторного подключения.",
    "nameEn": "reconnectDelay",
    "type": "INT"
  },
  {
    "nameRu": "Команды сайта",
    "defaultValue": null,
    "description": "Для выполнения команд сайта после успешного входа в систему. Несколько команд сайта могут быть разделены с помощью символа новой строки (\n). Используйте, help site чтобы увидеть, какие команды поддерживает ваш сервер FTP.",
    "nameEn": "siteCommand",
    "type": "STRING"
  },
  {
    "nameRu": "Значение таймаута soTimeout",
    "defaultValue": 300000,
    "description": "SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии.",
    "nameEn": "soTimeout",
    "type": "INT"
  },
  {
    "nameRu": "Поэтапный просмотр",
    "defaultValue": true,
    "description": "Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз. ",
    "nameEn": "stepwise",
    "type": "BOOL"
  },
  {
    "nameRu": "Использовать синхронную обработку",
    "defaultValue": false,
    "description": "Устанавливает, должна ли строго использоваться синхронная обработка, или брокер может использовать асинхронную обработку (если поддерживается)",
    "nameEn": "synchronous",
    "type": "BOOL"
  },
  {
    "nameRu": "Выводить ошибку при не успешном соединении",
    "defaultValue": false,
    "description": "Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель.",
    "nameEn": "throwExceptionOnConnectFailed",
    "type": "BOOL"
  },
  {
    "nameRu": "Таймаут",
    "defaultValue": "30000",
    "description": "Устанавливает тайм-аут данных для ожидания ответа. Используется только FTPClient",
    "nameEn": "timeout",
    "type": "INT"
  },
  {
    "nameRu": "Регулярное выражение ANT для исключения файлов",
    "defaultValue": null,
    "description": "Регулярное выражение Ant, из обработки будут исключены файлы соответствующие этому шаблону. Значения можно указывать через запятую. Например, значение t?st.txt,*.pdf значит, что из обработки будут исключены все pdf файлы и файлы test.txt или tast.txt",
    "nameEn": "antExclude",
    "type": "STRING"
  },
  {
    "nameRu": "Сделать регулярное выражение ANT чувствительным к регистру",
    "defaultValue": true,
    "description": "Сделать регулярное выражение ANT чувствительным к регистру.",
    "nameEn": "antFilterCaseSensitive",
    "type": "BOOL"
  },
  {
    "nameRu": "Регулярное выражение ANT для поиска файлов",
    "defaultValue": null,
    "description": "Регулярное выражение Ant, будут обработаны только файлы соответствующие этому шаблону. Значения можно указывать через запятую. Например, значение t?st.txt,*.pdf значит, что будут обработаны все pdf файлы и файлы test.txt или tast.txt",
    "nameEn": "antInclude",
    "type": "STRING"
  },
  {
    "nameRu": "Не выполнять полное сканирование перед опросом",
    "defaultValue": true,
    "description": "Установка этой опции false позволяет сортировать файлы, а затем ограничивать опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файлов будут загружены в память, для выполнения сортировки.",
    "nameEn": "eagerMaxMessagesPerPoll",
    "type": "BOOL"
  },
  {
    "nameRu": "Регулярное выражение исключения файлов",
    "defaultValue": null,
    "description": "Строка или регулярное выражение, файлы соответствующие этой строке или регулярному выражению будут исключены из обработки, например, для  исключения из обработки файлов txt и pdf \".*.pdf|.*.txt\".",
    "nameEn": "exclude",
    "type": "STRING"
  },
  {
    "nameRu": "Фильтр",
    "defaultValue": null,
    "description": "Сменный фильтр в виде класса org.apache.camel.component.file.GenericFileFilter. Будет пропускать файлы, если фильтр возвращает false в методе accept ().",
    "nameEn": "filter",
    "type": "BEAN"
  },
  {
    "nameRu": "Фильтр директорий",
    "defaultValue": null,
    "description": "Фильтрует директории. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}",
    "nameEn": "filterDirectory",
    "type": "STRING"
  },
  {
    "nameRu": "Фильтр файлов",
    "defaultValue": null,
    "description": "Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000",
    "nameEn": "filterFile",
    "type": "STRING"
  },
  {
    "nameRu": "Пропуск уже обработанных файлов",
    "defaultValue": false,
    "description": "Пропускать уже обработанные файлы, уникальный ключ файла - абсолютный путь к нему",
    "nameEn": "idempotent",
    "type": "BOOL"
  },
  {
    "nameRu": "Уникальный ключ уже обработанных файлов",
    "defaultValue": "Expression",
    "description": "По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size}",
    "nameEn": "idempotentKey",
    "type": "STRING"
  },
  {
    "nameRu": "Подключаемый IdempotentRepository",
    "defaultValue": null,
    "description": "Подключаемый репозиторий org.apache.camel.spi.IdempotentRepository, который по умолчанию использует MemoryMessageIdRepository, если ни один не указан, а idempotent имеет значение true.",
    "nameEn": "idempotentRepository",
    "type": "BEAN"
  },
  {
    "nameRu": "Регулярное выражение поиска файлов",
    "defaultValue": null,
    "description": "Строка или регулярное выражение, будут обработаны только файлы соответствующие этой строке или регулярному выражению, например, для обработки файлов txt и pdf \".*.pdf|.*.txt\".",
    "nameEn": "include",
    "type": "STRING"
  },
  {
    "nameRu": "Максимальная глубина для обхода при рекурсивной обработке директории",
    "defaultValue": 0,
    "description": "Максимальная глубина для обхода при рекурсивной обработке директории",
    "nameEn": "maxDepth",
    "type": "INT"
  },
  {
    "nameRu": "Количество файлов потребляемых за один опрос",
    "defaultValue": 0,
    "description": "Определяет количество файлов потребляемых за один опрос. По умолчанию не установлено. Может использоваться, чтобы установить предел, и снизить нагрузку на сервер. Значение  0 или отрицательное отключает предел<br\/>Примечание: Если эта опция используется, то сортировка будет применяться к этому пределу, а не ко всем файлам. Например, если у вас есть 100000 файлов и вы используете maxMessagesPerPoll = 500, тогда будут отобраны только первые 500 файлов, а только затем отсортированы. Вы можете использовать параметр eagerMaxMessagesPerPoll и установить для него значение false, чтобы сначала можно было сканировать все файлы, а затем сортировать",
    "nameEn": "maxMessagesPerPoll",
    "type": "INT"
  },
  {
    "nameRu": "Минимальная глубина начала обработки при рекурсивном обработке директории",
    "defaultValue": 0,
    "description": "Минимальная глубина, с которой начинается обработка при рекурсивном обработке директории. Использование minDepth=1 означает базовая директория. Использование minDepth=2 означает первый поддиректория, в базовой директории файлы обрабатываться не будут. Работает только при recursive=true",
    "nameEn": "minDepth",
    "type": "INT"
  },
  {
    "nameRu": "Имя директории\/файла после обработки",
    "defaultValue": ".camel",
    "description": "Строка или выражение файлового или простого языка, используется для динамической установки имени файла при его перемещении после обработки. Например, при значении параметра temp файлы будут перемещены в директорию temp со своими именами, при значении temp\/${id} перемещены в temp и названы как их id, при temp\/${id}\/${file:name} каждый файл под своим именем будет перемещен в отдельную директорию под названием его id внутри директории temp",
    "nameEn": "move",
    "type": "STRING"
  },
  {
    "nameRu": "Подключаемая блокировка чтения",
    "defaultValue": null,
    "description": "Подключаемая блокировка чтения как реализация org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy.",
    "nameEn": "exclusiveReadLockStrategy",
    "type": "BEAN"
  },
  {
    "acceptableValues": [
      {
        "label": "markerFile",
        "value": "markerFile"
      },
      {
        "label": "none",
        "value": "none"
      },
      {
        "label": "changed",
        "value": "changed"
      },
      {
        "label": "fileLock",
        "value": "fileLock"
      },
      {
        "label": "rename",
        "value": "rename"
      }
    ],
    "nameRu": "Блокировка файла",
    "defaultValue": null,
    "description": "Брокер будет ждать перед обработкой, пока файл заблокирован.  Возможны следующие варианты: none - не использовать блокировку; markerFile - брокер создает файл - маркер fileName.camelLock, а затем удерживает блокировку на нем; changed - отслеживаются изменения размера файла и дата изменения файла. Если изменений нет, по крайней мере в течении 1 с, файл отправляется в обработку; fileLock - используется java.nio.channels.FileLock; rename - попробует переименовать файл в качестве теста, с целью определения наличия эксклюзивной блокировки чтения.",
    "nameEn": "readLock",
    "type": "SELECT"
  },
  {
    "nameRu": "Интервал блокировки",
    "defaultValue": 1000,
    "description": "Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Значение readLockTimeout должно быть больше, чем readLockCheckInterval, по крайней мере, в 2 раза. Это необходимо, чтобы обеспечить достаточно времени для процесса блокировки чтения, чтобы попытаться захватить блокировку до истечения времени ожидания",
    "nameEn": "readLockCheckInterval",
    "type": "INT"
  },
  {
    "nameRu": "Удалять файлы блокировки чтения при запуске",
    "defaultValue": true,
    "description": "Должна ли блокировка чтения с файлами маркеров при запуске удалять любые файлы блокировки чтения, которые могли остаться в файловой системе, если Брокер не был корректно выключен (например, сбой JVM). Если для этой опции задано значение false, то любой потерянный файл блокировки приведет к тому, что Брокер не будет пытаться получить этот файл, это также может быть связано с тем, что другой узел одновременно читает файлы из того же общего каталога",
    "nameEn": "readLockDeleteOrphanLockFiles",
    "type": "BOOL"
  },
  {
    "acceptableValues": [
      {
        "label": "ERROR",
        "value": "ERROR"
      },
      {
        "label": "WARN",
        "value": "WARN"
      },
      {
        "label": "INFO",
        "value": "INFO"
      },
      {
        "label": "DEBUG",
        "value": "DEBUG"
      },
      {
        "label": "TRACE",
        "value": "TRACE"
      },
      {
        "label": "OFF",
        "value": "OFF"
      }
    ],
    "nameRu": "Уровень логирования блокировки файлов",
    "defaultValue": 0,
    "description": "Происходит запись в лог с определенным уровнем логирования, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename.",
    "nameEn": "readLockLoggingLevel",
    "type": "SELECT"
  },
  {
    "nameRu": "Использовать маркерный файл для блокировки",
    "defaultValue": true,
    "description": "Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы",
    "nameEn": "readLockMarkerFile",
    "type": "BOOL"
  },
  {
    "nameRu": "Минимальный возраст файла",
    "defaultValue": 0,
    "description": "Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут",
    "nameEn": "readLockMinAge",
    "type": "INT"
  },
  {
    "nameRu": "Минимальный размер файла блокировки",
    "defaultValue": 1,
    "description": "Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1. Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины.",
    "nameEn": "readLockMinLength",
    "type": "INT"
  },
  {
    "nameRu": "Удалять имя файла из идемпотентного репозитория при успешной обработке",
    "defaultValue": false,
    "description": "Эта опция применяется только для readLock = idempotent. Это позволяет указать, следует ли удалять запись имени файла из идемпотентного репозитория при успешной обработке файла и выполнении фиксации. По умолчанию файл не удаляется, что гарантирует отсутствие каких-либо условий гонки, поэтому другой активный узел может попытаться получить файл. Вместо этого идемпотентный репозиторий может поддерживать стратегии выселения, которые вы можете настроить, чтобы исключить запись имени файла через X минут - это гарантирует отсутствие проблем с условиями гонки. Подробности смотрите в опции readLockIdempotentReleaseDelay.",
    "nameEn": "readLockRemoveOnCommit",
    "type": "BOOL"
  },
  {
    "nameRu": "Удалять имя файла из идемпотентного репозитория при откате",
    "defaultValue": true,
    "description": "Эта опция применяется только для readLock = idempotent. Это позволяет указать, следует ли удалять запись имени файла из идемпотентного хранилища, если обработка файла не удалась и произошел откат. Если этот параметр имеет значение false, то запись имени файла подтверждается (как если бы файл сделал коммит).",
    "nameEn": "readLockRemoveOnRollback",
    "type": "BOOL"
  },
  {
    "nameRu": "Время ожидания блокировки",
    "defaultValue": 10000,
    "description": "Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена, то срабатывает тайм - аут, и брокер пропускает файл. В следующем опросе брокер, будет пытаться опросить файл снова",
    "nameEn": "readLockTimeout",
    "type": "INT"
  },
  {
    "nameRu": "Количество опросов ошибок до backoffMultipler",
    "defaultValue": null,
    "description": "Количество последующих опросов ошибок (не выполненных из-за какой-либо ошибки), которые должны произойти до того, как должен сработать backoffMultipler",
    "nameEn": "backoffErrorThreshold",
    "type": "INT"
  },
  {
    "nameRu": "Число незанятых опросов до запуска backoffMultipler",
    "defaultValue": null,
    "description": "Число последующих незанятых опросов, которые должны произойти до запуска backoffMultipler.",
    "nameEn": "backoffIdleThreshold",
    "type": "INT"
  },
  {
    "nameRu": "Позволить запланированному потребителю опроса отступить, если в строке было несколько последующих холостых ходов\/ошибок",
    "defaultValue": null,
    "description": "Чтобы позволить запланированному потребителю опроса отступить, если в строке было несколько последующих холостых ходов\/ошибок. Тогда множитель - это число опросов, которые будут пропущены, прежде чем следующая фактическая попытка произойдет снова. Когда эта опция используется, то также должны быть настроены backoffIdleThreshold и \/ или backoffErrorThreshold.",
    "nameEn": "backoffMultiplier",
    "type": "INT"
  },
  {
    "nameRu": "Задержка",
    "defaultValue": 500,
    "description": "Задержка перед вторым и последующими опросами файла \/ директории в миллисекундах",
    "nameEn": "delay",
    "type": "INT"
  },
  {
    "nameRu": "Жадный ScheduledPollConsumer",
    "defaultValue": false,
    "description": "Если включена жадность, то ScheduledPollConsumer сразу же запустится снова, если предыдущий запуск опрашивал 1 или более сообщений",
    "nameEn": "greedy",
    "type": "BOOL"
  },
  {
    "nameRu": "Первоначальная задержка",
    "defaultValue": 1000,
    "description": "Задержка перед первым опросом файла \/ директории в миллисекундах",
    "nameEn": "initialDelay",
    "type": "INT"
  },
  {
    "acceptableValues": [
      {
        "label": "ERROR",
        "value": "ERROR"
      },
      {
        "label": "WARN",
        "value": "WARN"
      },
      {
        "label": "INFO",
        "value": "INFO"
      },
      {
        "label": "DEBUG",
        "value": "DEBUG"
      },
      {
        "label": "TRACE",
        "value": "TRACE"
      },
      {
        "label": "OFF",
        "value": "OFF"
      }
    ],
    "nameRu": "Уровень протоколирования",
    "defaultValue": "WARN",
    "description": "Точка входа может записывать протоколы работы в factor-ib.log. Этот параметр позволяет настроить уровень протоколирования",
    "nameEn": "runLoggingLevel",
    "type": "SELECT"
  },
  {
    "nameRu": "Позволяет настроить пул потоков потребителя",
    "defaultValue": null,
    "description": "Позволяет настроить пользовательский \/ общий пул потоков для использования потребителем. По умолчанию каждый потребитель имеет свой собственный пул однопоточных потоков",
    "nameEn": "scheduledExecutorService",
    "type": "BEAN"
  },
  {
    "nameRu": "Планировщик",
    "defaultValue": "none",
    "description": "Использовать планировщик cron из camel-spring или camel-quartz",
    "nameEn": "scheduler",
    "type": "STRING"
  },
  {
    "nameRu": "Свойства планировщика",
    "defaultValue": null,
    "description": "Чтобы настроить дополнительные свойства при использовании пользовательского планировщика или любого из планировщиков на основе Quartz, Spring.",
    "nameEn": "schedulerProperties",
    "type": "BEAN"
  },
  {
    "nameRu": "Запустить планировщик автоматически",
    "defaultValue": true,
    "description": "Должен ли планировщик быть запущен автоматически.",
    "nameEn": "startScheduler",
    "type": "BOOL"
  },
  {
    "nameRu": "Единицы времени",
    "defaultValue": "MILLISECONDS",
    "description": "Единицы времени для параметров initialDelay и delay",
    "nameEn": "timeUnit",
    "type": "BEAN"
  },
  {
    "nameRu": "Использовать фиксированную задержку",
    "defaultValue": true,
    "description": "Используется ли Фиксированная задержка или фиксированная скорость опроса",
    "nameEn": "useFixedDelay",
    "type": "BOOL"
  },
  {
    "nameRu": "Случайный порядок",
    "defaultValue": false,
    "description": "Для того, чтобы перетасовать список файлов до обработки (сортировка в случайном порядке). Сортировка по умолчанию отсутствует, порядок обработки задает ОС",
    "nameEn": "shuffle",
    "type": "BOOL"
  },
  {
    "nameRu": "Сортировка",
    "defaultValue": null,
    "description": "Встроенная сортировка с использованием простого или файлового языка выражений. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. Например, если значение file:modified;file:name , то сначала будет произведена сортировка по времени изменения, в первую очередь последние измененные файлы, а потом, если у файлов одинаковое время изменения, то сортировка по имени; при таком значении reverse:ignoreCase:file:name сортировка по имени в обратном порядке с игнорированием регистра",
    "nameEn": "sortBy",
    "type": "STRING"
  },
  {
    "nameRu": "Сортировщик",
    "defaultValue": null,
    "description": "Сменный сортировщик как класс java.util.Comparator.",
    "nameEn": "sorter",
    "type": "BEAN"
  },
  {
    "nameRu": "Аккаунт",
    "defaultValue": null,
    "description": "Аккаунт для входа на удаленный FTP - сервер",
    "nameEn": "account",
    "type": "STRING"
  },
  {
    "nameRu": "Отключить использование значений по умолчанию безопасной передачи данных",
    "defaultValue": false,
    "description": "Отключать или нет  использование значений по умолчанию execPbsz и \"Тип протокола FTPS\" при использовании безопасной передачи данных. Вы можете установить эту опцию в true если вы хотите полностью контролировать опции execPbsz и \"Тип протокола FTPS\".",
    "nameEn": "disableSecureDataChannelDefaults",
    "type": "BOOL"
  },
  {
    "nameRu": "Размер буфера защищенного канала передачи данных",
    "defaultValue": null,
    "description": "Этот параметр определяет размер буфера защищенного канала передачи данных. Если опция useSecureDataChannel включена, и эта опция не была установлена, то используется значение 0.",
    "nameEn": "execPbsz",
    "type": "STRING"
  },
  {
    "nameRu": "Тип протокола FTPS",
    "defaultValue": null,
    "description": "По умолчанию использует P , если secure data channel по умолчанию не был отключен. Возможные значения: C: Clear, S: Safe(Протокол SSL), E: (Протокол SSL), Confidential P: Private",
    "nameEn": "execProt",
    "type": "STRING"
  },
  {
    "nameRu": "Параметры хранилища ключей",
    "defaultValue": null,
    "description": "Установите параметры хранилища ключей",
    "nameEn": "ftpClientKeyStoreParameters",
    "type": "BEAN"
  },
  {
    "nameRu": "Параметры хранилища доверия",
    "defaultValue": null,
    "description": "Установите параметры хранилища доверия",
    "nameEn": "ftpClientTrustStoreParameters",
    "type": "BEAN"
  },
  {
    "nameRu": "Неявный режим безопасности",
    "defaultValue": false,
    "description": "Установите режим безопасности (неявный \/ явный). true - неявный режим \/ False - явный режим",
    "nameEn": "implicit",
    "type": "BOOL"
  },
  {
    "nameRu": "Пароль",
    "defaultValue": null,
    "description": "Задает пароль для использования в удаленной файловой системе.",
    "nameEn": "password",
    "type": "STRING"
  },
  {
    "nameRu": "Протокол безопасности",
    "defaultValue": "TLS",
    "description": "Устанавливает протокол безопасности. Следующие значения определены: TLS: Transport Layer Security, SSL: Secure Sockets Layer",
    "nameEn": "securityProtocol",
    "type": "STRING"
  },
  {
    "nameRu": "Ссылка на параметры SSL контекста",
    "defaultValue": null,
    "description": "Ссылка на org.apache.camel.util.jsse.SSLContextParameters в реестре. Эта ссылка заменяет любые сконфигурированные параметры SSL на ftpClient, а также securityProtocol (SSL, TLS и т.д.) , установленный на FtpsConfiguration. См использование конфигурационной утилиты JSSE.",
    "nameEn": "sslContextParameters",
    "type": "BEAN"
  },
  {
    "nameRu": "Имя пользователя",
    "defaultValue": null,
    "description": "Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа.",
    "nameEn": "username",
    "type": "STRING"
  }
]